// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MyNewBDDTest.SpecFlowFeature
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class FiveDayWeatherForeCastFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FiveDaysWeatherForCast.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Five Day Weather Fore Cast", "   As a user I need to see weather forecast for 5 days starting from today \r\n   f" +
                    "or the selected place (City)", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Five Day Weather Fore Cast")))
            {
                MyNewBDDTest.SpecFlowFeature.FiveDayWeatherForeCastFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 5
 #line 6
   testRunner.Given("I have open the weather forecast app", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("An option to select/Enter a place")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("firstTest")]
        public virtual void AnOptionToSelectEnterAPlace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An option to select/Enter a place", new string[] {
                        "firstTest"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 10
 testRunner.Then("I should have a option to select/enter place", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void FiveDayWeatherForecastShownForASelectedCity(string city, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Five day weather forecast shown for a selected City", exampleTags);
#line 12
this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 13
  testRunner.When(string.Format("I have entered/selected a valid \"{0}\"", city), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
  testRunner.Then(string.Format("Five day weather forecast is shown for \"{0}\"", city), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Five day weather forecast shown for a selected City: Glasgow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Glasgow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Glasgow")]
        public virtual void FiveDayWeatherForecastShownForASelectedCity_Glasgow()
        {
            this.FiveDayWeatherForecastShownForASelectedCity("Glasgow", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Five day weather forecast shown for a selected City: Aberdeen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Aberdeen")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Aberdeen")]
        public virtual void FiveDayWeatherForecastShownForASelectedCity_Aberdeen()
        {
            this.FiveDayWeatherForecastShownForASelectedCity("Aberdeen", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Five day weather forecast shown for a selected City: London")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "London")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "London")]
        public virtual void FiveDayWeatherForecastShownForASelectedCity_London()
        {
            this.FiveDayWeatherForecastShownForASelectedCity("London", ((string[])(null)));
#line hidden
        }
        
        public virtual void NoForecastShownForIncorrectCity(string city, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("No forecast shown for incorrect city", exampleTags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 27
testRunner.When(string.Format("I have entered a incorrect \"{0}\"", city), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
testRunner.Then("I don\'t see any forecast", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
testRunner.And("I see a error message saying \"Error retrieving the forecast\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("No forecast shown for incorrect city: XYZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "XYZ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "XYZ")]
        public virtual void NoForecastShownForIncorrectCity_XYZ()
        {
            this.NoForecastShownForIncorrectCity("XYZ", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("No forecast shown for incorrect city: 1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "1234")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "1234")]
        public virtual void NoForecastShownForIncorrectCity_1234()
        {
            this.NoForecastShownForIncorrectCity("1234", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("No forecast shown for incorrect city: Glas glow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Glas glow")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Glas glow")]
        public virtual void NoForecastShownForIncorrectCity_GlasGlow()
        {
            this.NoForecastShownForIncorrectCity("Glas glow", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("No forecast shown for incorrect city: Aberdeen 3323232")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Aberdeen 3323232")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:City", "Aberdeen 3323232")]
        public virtual void NoForecastShownForIncorrectCity_Aberdeen3323232()
        {
            this.NoForecastShownForIncorrectCity("Aberdeen 3323232", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("3 hourly forecast details expanded for a selected day")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        public virtual void _3HourlyForecastDetailsExpandedForASelectedDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3 hourly forecast details expanded for a selected day", ((string[])(null)));
#line 41
this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 42
testRunner.Given("I have entered/selected a valid city", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
testRunner.When("I have selected a day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
testRunner.Then("I should see 3 hourly forecase shown for the day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("3 hourly forecast details hidden for a selected day")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        public virtual void _3HourlyForecastDetailsHiddenForASelectedDay()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3 hourly forecast details hidden for a selected day", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 47
testRunner.Given("I have entered/selected a valid city", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
testRunner.And("I have selected a day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.When("I have reselected the same day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
testRunner.Then("I should see that 3 hourly forecast details are hidden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("3 hourly forecast details summary")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        public virtual void _3HourlyForecastDetailsSummary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("3 hourly forecast details summary", ((string[])(null)));
#line 52
this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 53
testRunner.Given("I have entered/selected a valid city", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
testRunner.And("I have selected a day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
testRunner.Then("I have to see the summary for every 3 hours with below details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Able to see forecast when entered a valid city on error page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        public virtual void AbleToSeeForecastWhenEnteredAValidCityOnErrorPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Able to see forecast when entered a valid city on error page", ((string[])(null)));
#line 58
this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 59
testRunner.Given("I am on error page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 60
 testRunner.When("I have entered/selected a valid City", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.Then("Five day weather forecast is shown", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void TheSummaryForecaseDetailsForADay(string selection, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The summary forecase details for a day", exampleTags);
#line 63
 this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 64
  testRunner.When("I have entered/selected a valid City", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
  testRunner.Then(string.Format("\"{0}\" is shown for the day", selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for a day: Most dominant condition")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Most dominant condition")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Most dominant condition")]
        public virtual void TheSummaryForecaseDetailsForADay_MostDominantCondition()
        {
            this.TheSummaryForecaseDetailsForADay("Most dominant condition", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for a day: Current wind speed and direction")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Current wind speed and direction")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Current wind speed and direction")]
        public virtual void TheSummaryForecaseDetailsForADay_CurrentWindSpeedAndDirection()
        {
            this.TheSummaryForecaseDetailsForADay("Current wind speed and direction", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for a day: Aggregate rainfall")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Aggregate rainfall")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Aggregate rainfall")]
        public virtual void TheSummaryForecaseDetailsForADay_AggregateRainfall()
        {
            this.TheSummaryForecaseDetailsForADay("Aggregate rainfall", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for a day: Minimum and maximum temperatures")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Minimum and maximum temperatures")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Minimum and maximum temperatures")]
        public virtual void TheSummaryForecaseDetailsForADay_MinimumAndMaximumTemperatures()
        {
            this.TheSummaryForecaseDetailsForADay("Minimum and maximum temperatures", ((string[])(null)));
#line hidden
        }
        
        public virtual void TheSummaryForecaseDetailsFor3Hourly(string selection, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The summary forecase details for 3 hourly", exampleTags);
#line 76
 this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 77
  testRunner.When("I have entered/selected a valid City", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
  testRunner.And("I have selected a day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
  testRunner.Then(string.Format("\"{0}\" is shown for every 3 hours", selection), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for 3 hourly: Most dominant condition")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Most dominant condition")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Most dominant condition")]
        public virtual void TheSummaryForecaseDetailsFor3Hourly_MostDominantCondition()
        {
            this.TheSummaryForecaseDetailsFor3Hourly("Most dominant condition", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for 3 hourly: Current wind speed and direction")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Current wind speed and direction")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Current wind speed and direction")]
        public virtual void TheSummaryForecaseDetailsFor3Hourly_CurrentWindSpeedAndDirection()
        {
            this.TheSummaryForecaseDetailsFor3Hourly("Current wind speed and direction", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for 3 hourly: Aggregate rainfall")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Aggregate rainfall")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Aggregate rainfall")]
        public virtual void TheSummaryForecaseDetailsFor3Hourly_AggregateRainfall()
        {
            this.TheSummaryForecaseDetailsFor3Hourly("Aggregate rainfall", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The summary forecase details for 3 hourly: Minimum and maximum temperatures")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Minimum and maximum temperatures")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:Selection", "Minimum and maximum temperatures")]
        public virtual void TheSummaryForecaseDetailsFor3Hourly_MinimumAndMaximumTemperatures()
        {
            this.TheSummaryForecaseDetailsFor3Hourly("Minimum and maximum temperatures", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Rounded values shown in  day forecast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        public virtual void RoundedValuesShownInDayForecast()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rounded values shown in  day forecast", ((string[])(null)));
#line 89
 this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 91
  testRunner.When("I have entered/selected a valid City", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
  testRunner.Then("Values shown are rounded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Rounded values shown in 3 hourly forecast")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        public virtual void RoundedValuesShownIn3HourlyForecast()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Rounded values shown in 3 hourly forecast", ((string[])(null)));
#line 94
  this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 96
  testRunner.When("I have entered/selected a valid City", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
  testRunner.And("I have selected a day", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
  testRunner.Then("Values shown are rounded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Previously selected day\'s 3 hourly forecast is Hidden when day is selected")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Five Day Weather Fore Cast")]
        public virtual void PreviouslySelectedDayS3HourlyForecastIsHiddenWhenDayIsSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Previously selected day\'s 3 hourly forecast is Hidden when day is selected", ((string[])(null)));
#line 101
  this.ScenarioSetup(scenarioInfo);
#line 5
 this.FeatureBackground();
#line 102
  testRunner.Given("I have entered/selected a valid city", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 103
  testRunner.And("I have selected a <Day>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
  testRunner.When("I have selected the someother <Day2>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
  testRunner.Then("I should see that 3 hourly forecast details for lastly select <Day2>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 106
  testRunner.And("I should see that 3 hourly forecast details are hidden for <Day1>", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
